The following ABNF grammar defines the The Hydra Protocol:

    hydra = hello *( get-post ) [ goodbye ]
    hello = c:hello ( s:hello-ok / s:invalid / s:failed )
    get-post = c:get-post ( s:get-post-ok / s:invalid / s:failed )
    goodbye = c:goodbye ( s:goodbye-ok / s:invalid / s:failed )

    ;  Open new connection, provide client credentials.                      

    HELLO           = signature %d1 identity nickname
    signature       = %xAA %xA0             ; two octets
    identity        = string                ; Client identity
    nickname        = string                ; Client nickname

    ;  Accept new connection, provide server credentials.                    

    HELLO-OK        = signature %d2 identity nickname
    identity        = string                ; Server identity
    nickname        = string                ; Server nickname

    ;  Client requests server status update, telling server the oldest and   
    ;  newest post that it knows for that server. If the client never        
    ;  received any posts from the server, these fields are empty.           

    STATUS          = signature %d3 oldest newest
    oldest          = string                ; Oldest post
    newest          = string                ; Newest post

    ;  Server tells client how many posts it has, older and newer than the   
    ;  range the client already knows.                                       

    STATUS-OK       = signature %d4 before after
    before          = number-4              ; Number of posts before oldest
    after           = number-4              ; Newest of posts after newest

    ;  Client requests a post from the server, requesting either an older    
    ;  post (previous to the oldest post it already has), a newer post       
    ;  (following the newest post it has), or a fresh post (server's latest  
    ;  post, ignoring all status).                                           

    HEADER          = signature %d5 which
    which           = number-1              ; Which post to fetch

    ;  Return a post's metadata.                                             

    HEADER-OK       = signature %d6 ident subject timestamp parent_id digest mime_type content_size
    ident           = string                ; Post identifier
    subject         = longstr               ; Subject line
    timestamp       = string                ; Post creation timestamp
    parent id       = string                ; Parent post ID, if any
    digest          = string                ; Content SHA1 digest
    mime type       = string                ; Content MIME type
    content size    = number-8              ; Content size, octets

    ;  Server does not have a post to give to the client.                    

    HEADER-EMPTY    = signature %d7

    ;  Client fetches a chunk of content data from the server. This command  
    ;  always applies to the post returned by a HEADER-OK. The               

    CHUNK           = signature %d8 offset octets
    offset          = number-8              ; Chunk offset in file
    octets          = number-4              ; Maximum chunk size to fetch

    ;  Return a chunk of post content.                                       

    CHUNK-OK        = signature %d9 offset content
    offset          = number-8              ; Chunk offset in file
    content         = chunk                 ; Content data chunk

    ;  Close the connection politely                                         

    GOODBYE         = signature %d10

    ;  Handshake a connection close                                          

    GOODBYE-OK      = signature %d11

    ;  Command failed for some specific reason                               

    ERROR           = signature %d12 status reason
    status          = number-2              ; 3-digit status code
    reason          = string                ; Printable explanation

    ; A chunk has 4-octet length + binary contents
    chunk           = number-4 *OCTET

    ; Strings are always length + text contents
    string          = number-1 *VCHAR
    longstr         = number-4 *VCHAR

    ; Numbers are unsigned integers in network byte order
    number-1        = 1OCTET
    number-2        = 2OCTET
    number-4        = 4OCTET
    number-8        = 8OCTET
