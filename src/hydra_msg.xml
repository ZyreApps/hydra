<class
    name = "hydra_msg"
    title = "The Hydra Protocol"
    script = "zproto_codec_c"
    package_dir = "../include"
    >
    <include filename = "../license.xml" />

    <grammar>
    hydra = hello *( tags / tag / post ) [ goodbye ]
    hello = c:hello ( s:hello-ok / s:invalid / s:failed )
    get-post = c:get-post ( s:get-post-ok / s:invalid / s:failed )
    get-tags = c:get-tags ( s:get-tags-ok / s:invalid / s:failed )
    get-tag = c:get-tag ( s:get-tag-ok / s:invalid / s:failed )
    goodbye = c:goodbye ( s:goodbye-ok / s:invalid / s:failed )
    </grammar>

    <message name = "hello">
        Open new connection
        <field name = "address" type = "string">Client address</field>
    </message>

    <message name = "hello ok">
        Accept new connection and return most recent (last) post.
        <field name = "post-id" type = "string">Post identifier</field>
    </message>

    <message name = "get post">
        Fetch a given post's content
        <field name = "post-id" type = "string">Post identifier</field>
    </message>

    <message name = "get post ok">
        Return a post's metadata and content
        <field name = "post-id" type = "string">Post identifier</field>
        <field name = "reply-to" type = "string">Parent post, if any</field>
        <field name = "previous" type = "string">Previous post, if any</field>
        <field name = "tags" type = "strings">Content tags</field>
        <field name = "timestamp" type = "string">Content date/time</field>
        <field name = "digest" type = "octets" size = "20">SHA1 content digest</field>
        <field name = "type" type = "string">Content type</field>
        <field name = "content" type = "msg">Content body</field>
    </message>

    <message name = "get tags">
        Request list of tags known by peer
    </message>

    <message name = "get tags ok">
        Return list of known tags
        <field name = "tags" type = "strings">List of known tags</field>
    </message>

    <message name = "get tag">
        Request summary for a given tag
        <field name = "tag" type = "string">Name of tag</field>
    </message>

    <message name = "get tag ok">
        Return latest post ID for given tag
        <field name = "tag" type = "string">Name of tag</field>
        <field name = "post-id" type = "string">Post identifier</field>
    </message>

    <message name = "goodbye">
        Close the connection politely
    </message>

    <message name = "goodbye ok">
        Handshake a connection close
    </message>

    <message name = "invalid">
        Command was invalid at this time
    </message>

    <message name = "failed">
        Command failed for some specific reason
        <field name = "reason" type = "string">Reason for failure</field>
    </message>
</class>
