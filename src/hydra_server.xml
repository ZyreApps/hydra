<class
    name = "hydra_server"
    title = "Hydra Server (in C)"
    script = "zproto_server_c"
    protocol_class = "hydra_proto"
    package_dir = "../include"
    project_header = "hydra_classes.h"
    >
    This is a server implementation of the Hydra Protocol; we do not fetch
    content, only serve it. Fetching is done by a separate client instance.
    <include filename = "../license.xml" />

    <state name = "start" inherit = "defaults">
        <event name = "HELLO" next = "connected">
            <action name = "set server identity" />
            <action name = "send" message = "HELLO OK" />
        </event>
    </state>

    <state name = "connected" inherit = "defaults">
        <event name = "STATUS">
            <action name = "calculate status for client" />
            <action name = "send" message = "STATUS OK" />
        </event>
        <event name = "HEADER">
            <action name = "send" message = "HEADER OK" />
        </event>
        <event name = "FETCH">
            <action name = "send" message = "FETCH OK" />
        </event>
        <event name = "GOODBYE">
            <action name = "send" message = "GOODBYE OK" />
            <action name = "terminate" />
        </event>
    </state>

    <state name = "defaults">
        <!-- This built-in event hits on a client timeout -->
        <event name = "expired">
            <action name = "terminate" />
        </event>
        <!-- Client tried to do something we don't allow yet -->
        <event name = "exception">
            <action name = "send" message = "ERROR" />
            <action name = "terminate" />
        </event>
        <!-- All other protocol messages are invalid -->
        <event name = "*">
            <action name = "signal command invalid" />
            <action name = "send" message = "ERROR" />
            <action name = "terminate" />
        </event>
    </state>
</class>
