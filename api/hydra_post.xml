
<class name = "hydra_post">
    Main Hydra API
    
    <constructor>
        Create a new post
        <argument name = "subject" type = "string" />
    </constructor>
    
    <destructor>
        Destroy the post
    </destructor>
    
    <method name = "ident">
        Recalculate the post ID based on subject, timestamp, parent id, MIME
        type, and content digest, and return post ID to caller.
        <return type = "string" />
    </method>
    
    <method name = "subject">
        Return the post subject, if set
        <return type = "string" />
    </method>
    
    <method name = "timestamp">
        Return the post timestamp
        <return type = "string" />
    </method>
    
    <method name = "parent_id">
        Return the post parent id, or empty string if not set
        <return type = "string" />
    </method>
    
    <method name = "mime_type">
        Return the post MIME type, if set
        <return type = "string" />
    </method>
    
    <method name = "digest">
        Return the post content digest
        <return type = "string" />
    </method>
    
    <method name = "location">
        Return the post content location
        <return type = "string" />
    </method>
    
    <method name = "content_size">
        Return the post content size
        <return type = "integer" c_type = "size_t" />
    </method>
    
    <method name = "set_parent_id">
        Set the post parent id, which must be a valid post ID
        <argument name = "parent_id" type = "string" />
    </method>
    
    <method name = "set_mime_type">
        Set the post MIME type
        <argument name = "mime_type" type = "string" />
    </method>
    
    <method name = "set_content">
        Set the post content to a text string. Recalculates the post digest from
        from the new content value. Sets the MIME type to text/plain.
        <argument name = "content" type = "string" />
    </method>
    
    <method name = "set_data">
        Set the post content to a chunk of data. Recalculates the post digest
        from the chunk contents. Takes ownership of the chunk. The data is not
        stored on disk until you call hydra_post_save.
        <argument name = "data" type = "anything" constant = "1" />
        <argument name = "size" type = "integer" c_type = "size_t" />
    </method>
    
    <method name = "set_file">
        Set the post content to point to a specified file. The file must exist.
        Recalculates the post digest from the file contents. Returns 0 if OK, -1
        if the file was unreadable.
        <argument name = "location" type = "string" />
        <return type = "integer" />
    </method>
    
    <method name = "save">
        Save the post to disk under the specified filename. Returns 0 if OK, -1
        if the file could not be created. Posts are always stored in the "posts"
        subdirectory of the current working directory.
        <argument name = "filename" type = "string" />
        <return type = "integer" />
    </method>
    
    <method name = "load" singleton = "1">
        Load post from the specified filename. Posts are always read from the
        "posts" subdirectory of the current working directory. Returns a new post
        instance if the file could be loaded, else returns null.
        <argument name = "filename" type = "string" />
        <return type = "hydra_post" fresh = "1" />
    </method>
    
    <method name = "fetch">
        Fetch a chunk of content for the post. The caller specifies the size and
        offset of the chunk. A size of 0 means all content, which will fail if
        there is insufficient memory available. The caller must destroy the chunk
        when finished with it.
        <argument name = "size" type = "integer" c_type = "size_t" />
        <argument name = "offset" type = "integer" c_type = "size_t" />
        <return type = "zchunk" fresh = "1" />
    </method>
    
    <method name = "encode">
        Encode a post metadata to a hydra_proto message
        <argument name = "proto" type = "hydra_proto" />
    </method>
    
    <method name = "decode" singleton = "1">
        Create a new post from a hydra_proto HEADER-OK message.
        <argument name = "proto" type = "hydra_proto" />
        <return type = "hydra_post" fresh = "1" />
    </method>
    
    <method name = "dup">
        Duplicate a post instance. Does not create a new post on disk; this
        provides a second instance of the same post item.
        <return type = "hydra_post" fresh = "1" />
    </method>
    
    <method name = "print">
        Print the post file to stdout
    </method>
    
    <method name = "test" singleton = "1">
        Self test of this class
        <argument name = "verbose" type = "boolean" />
    </method>
    
</class>
